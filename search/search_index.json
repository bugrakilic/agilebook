{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Agilebook","text":"<p>The Agilebook is your comprehensive resource for understanding and applying Agile and Scrum practices. Whether you're a product owner, scrum master, developer, or agile enthusiast, this site provides clear, structured knowledge to help you succeed in agile environments.</p>"},{"location":"#contents-overview","title":"\ud83d\udcda Contents Overview","text":""},{"location":"#introduction","title":"\ud83e\udded Introduction","text":"<ul> <li>What is Agile and Scrum?</li> <li>Popular Agile methodologies (Scrum, Kanban, XP, etc.)</li> <li>Core principles of the Agile Manifesto</li> </ul>"},{"location":"#scrum-team-roles","title":"\ud83d\udc65 Scrum Team Roles","text":"<ul> <li>Overview of the Scrum Team</li> <li>Product Owner, Scrum Master, and Development Team responsibilities</li> </ul>"},{"location":"#scrum-events","title":"\ud83d\udd01 Scrum Events","text":"<ul> <li>Sprint Planning</li> <li>Daily Scrum</li> <li>Sprint Review</li> <li>Sprint Retrospective</li> </ul>"},{"location":"#scrum-artifacts","title":"\ud83d\udce6 Scrum Artifacts","text":"<ul> <li>Product Backlog</li> <li>Sprint Backlog</li> <li>Increment</li> </ul>"},{"location":"#agile-manifesto","title":"\ud83d\udcdc Agile Manifesto","text":"<ul> <li>The 4 Agile Values</li> <li>The 12 Agile Principles</li> <li>Origins and overview</li> </ul>"},{"location":"#agile-practices","title":"\ud83d\udd28 Agile Practices","text":"<ul> <li>User Stories</li> <li>Story Point Estimation</li> <li>Velocity Tracking</li> <li>Definition of Done</li> <li>CI/CD in Agile teams</li> </ul>"},{"location":"#agile-metrics","title":"\ud83d\udcca Agile Metrics","text":"<ul> <li>Burndown and Burnup Charts</li> <li>Cumulative Flow Diagrams</li> <li>Lead Time vs. Cycle Time</li> <li>Retrospective Metrics</li> </ul>"},{"location":"#getting-started","title":"\ud83c\udfc1 Getting Started","text":"<p>Use the navigation sidebar to explore each section, or jump directly to the topics that interest you. Each page provides concise explanations and practical insights to enhance your agile practice.</p> <p>Built with MkDocs and the Material for MkDocs theme.</p> <p>\u00a9 2025 Bugra Kilic</p>"},{"location":"1.1-what-is-agile/","title":"What is Agile?","text":"","tags":["agile","introduction"]},{"location":"1.1-what-is-agile/#history-evolution","title":"History &amp; Evolution","text":"<p>Agile is a mindset and set of practices that emerged in response to the limitations of traditional project management approaches, often called \"waterfall.\" It became popular in the early 2000s with the publication of the Agile Manifesto.</p>","tags":["agile","introduction"]},{"location":"1.1-what-is-agile/#agile-manifesto-principles","title":"Agile Manifesto &amp; Principles","text":"<p>The Agile Manifesto was created in 2001 by 17 software developers to improve software development processes. It emphasizes:</p> <ul> <li>Individuals and interactions over processes and tools  </li> <li>Working software over comprehensive documentation  </li> <li>Customer collaboration over contract negotiation  </li> <li>Responding to change over following a plan  </li> </ul> <p>Alongside these values, there are 12 Agile Principles that guide Agile practices.</p>","tags":["agile","introduction"]},{"location":"1.1-what-is-agile/#benefits-of-agile-over-traditional-methodologies","title":"Benefits of Agile over Traditional Methodologies","text":"<ul> <li>Increased flexibility and adaptability to change  </li> <li>Faster delivery of value through iterative work cycles  </li> <li>Improved collaboration and communication among teams and stakeholders  </li> <li>Enhanced customer satisfaction with continuous feedback  </li> <li>Reduced risk through incremental delivery  </li> </ul>","tags":["agile","introduction"]},{"location":"1.2-what-is-scrum/","title":"What is Scrum?","text":"","tags":["scrum","agile","framework"]},{"location":"1.2-what-is-scrum/#scrum-framework-overview","title":"Scrum Framework Overview","text":"<p>Scrum is a lightweight Agile framework used to manage and complete complex projects. It divides work into small, manageable pieces called Sprints, typically lasting 2-4 weeks. Scrum emphasizes teamwork, accountability, and iterative progress.</p>","tags":["scrum","agile","framework"]},{"location":"1.2-what-is-scrum/#scrum-vs-agile-differences-relationship","title":"Scrum vs Agile: Differences &amp; Relationship","text":"<ul> <li>Agile is a broad mindset and set of principles for project management and software development.  </li> <li>Scrum is a specific Agile framework implementing Agile principles through defined roles, events, and artifacts.  </li> </ul> <p>Scrum is one of the most widely adopted frameworks to practice Agile.</p>","tags":["scrum","agile","framework"]},{"location":"1.3-common-agile-methodologies/","title":"Common Agile Methodologies","text":"<p>Agile is an umbrella term that includes various methodologies, each with its own approach and focus:</p>","tags":["agile","kanban","lean","xp","safe"]},{"location":"1.3-common-agile-methodologies/#kanban","title":"Kanban","text":"<ul> <li>Visual workflow management method using boards and cards  </li> <li>Focuses on continuous delivery and limiting work in progress (WIP)  </li> <li>Flexible and easy to implement alongside existing processes</li> </ul>","tags":["agile","kanban","lean","xp","safe"]},{"location":"1.3-common-agile-methodologies/#lean","title":"Lean","text":"<ul> <li>Originates from manufacturing principles (Toyota Production System)  </li> <li>Emphasizes eliminating waste and maximizing value  </li> <li>Applies Lean thinking to software development and business processes</li> </ul>","tags":["agile","kanban","lean","xp","safe"]},{"location":"1.3-common-agile-methodologies/#xp-extreme-programming","title":"XP (Extreme Programming)","text":"<ul> <li>Focuses on engineering practices to improve software quality  </li> <li>Practices include pair programming, test-driven development, continuous integration, and frequent releases</li> </ul>","tags":["agile","kanban","lean","xp","safe"]},{"location":"1.3-common-agile-methodologies/#safe-scaled-agile-framework","title":"SAFe (Scaled Agile Framework)","text":"<ul> <li>Framework for scaling Agile practices across large enterprises  </li> <li>Provides structured roles, responsibilities, and workflows for multiple teams  </li> <li>Incorporates Lean, Agile, and product development flow principles</li> </ul>","tags":["agile","kanban","lean","xp","safe"]},{"location":"1.4-agile-manifesto-principles/","title":"Agile Manifesto &amp; Principles","text":"","tags":["agile","manifesto","principles"]},{"location":"1.4-agile-manifesto-principles/#agile-manifesto-values","title":"Agile Manifesto Values","text":"<p>The Agile Manifesto highlights four key values:</p> <ol> <li>Individuals and interactions over processes and tools  </li> <li>Working software over comprehensive documentation  </li> <li>Customer collaboration over contract negotiation  </li> <li>Responding to change over following a plan  </li> </ol>","tags":["agile","manifesto","principles"]},{"location":"1.4-agile-manifesto-principles/#the-12-agile-principles","title":"The 12 Agile Principles","text":"<ol> <li>Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.  </li> <li>Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.  </li> <li>Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.  </li> <li>Business people and developers must work together daily throughout the project.  </li> <li>Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.  </li> <li>The most efficient and effective method of conveying information is face-to-face conversation.  </li> <li>Working software is the primary measure of progress.  </li> <li>Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.  </li> <li>Continuous attention to technical excellence and good design enhances agility.  </li> <li>Simplicity\u2014the art of maximizing the amount of work not done\u2014is essential.  </li> <li>The best architectures, requirements, and designs emerge from self-organizing teams.  </li> <li>At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.  </li> </ol>","tags":["agile","manifesto","principles"]},{"location":"2.1-scrum-team-overview/","title":"Scrum Team Overview","text":"<p>The Scrum Team is a small, cross-functional group responsible for delivering value in Scrum projects. The team is designed to be self-organizing and collaborative to maximize productivity and product quality.</p>","tags":["scrum","team","roles"]},{"location":"2.1-scrum-team-overview/#core-components-of-a-scrum-team","title":"Core Components of a Scrum Team","text":"<ul> <li>Product Owner: Represents the stakeholders and customers, responsible for maximizing product value and managing the Product Backlog.  </li> <li>Scrum Master: Facilitates Scrum events, removes impediments, and ensures the team adheres to Scrum principles.  </li> <li>Development Team: A group of professionals who do the work of delivering a potentially releasable Increment at the end of each Sprint.</li> </ul>","tags":["scrum","team","roles"]},{"location":"2.1-scrum-team-overview/#key-characteristics","title":"Key Characteristics","text":"<ul> <li>Typically consists of 3 to 9 members (excluding the Scrum Master and Product Owner if they are separate individuals).  </li> <li>Cross-functional, meaning members have all the skills needed to deliver work without depending on others outside the team.  </li> <li>Self-organizing, with authority over how to accomplish their work.  </li> <li>Collaborative, sharing responsibility for delivering the Sprint goals.</li> </ul>","tags":["scrum","team","roles"]},{"location":"2.1-scrum-team-overview/#benefits-of-the-scrum-team-structure","title":"Benefits of the Scrum Team Structure","text":"<ul> <li>Encourages ownership and accountability.  </li> <li>Improves communication and coordination.  </li> <li>Enhances flexibility and adaptability during development.  </li> <li>Drives continuous improvement through regular inspection and adaptation.</li> </ul>","tags":["scrum","team","roles"]},{"location":"2.2-product-owner-role/","title":"Product Owner Role","text":"<p>The Product Owner (PO) is a key Scrum role responsible for maximizing the value of the product resulting from the work of the Development Team.</p>","tags":["scrum","product owner","roles"]},{"location":"2.2-product-owner-role/#responsibilities","title":"Responsibilities","text":"<ul> <li> <p>Managing the Product Backlog:   Creating, prioritizing, and clearly expressing Product Backlog items to ensure the team works on the most valuable features first.  </p> </li> <li> <p>Stakeholder Engagement:   Acting as the primary liaison between stakeholders, customers, and the Scrum Team to gather feedback and align priorities.  </p> </li> <li> <p>Vision &amp; Strategy:   Defining the product vision and ensuring it is understood by the team.  </p> </li> <li> <p>Release Management:   Making decisions about product releases and ensuring that increments delivered meet customer needs.  </p> </li> </ul>","tags":["scrum","product owner","roles"]},{"location":"2.2-product-owner-role/#key-skills-traits","title":"Key Skills &amp; Traits","text":"<ul> <li>Strong communication and negotiation abilities  </li> <li>Deep understanding of customer needs and market trends  </li> <li>Ability to balance business priorities and technical feasibility  </li> <li>Decisiveness and accountability for product outcomes  </li> </ul>","tags":["scrum","product owner","roles"]},{"location":"2.2-product-owner-role/#common-challenges","title":"Common Challenges","text":"<ul> <li>Managing competing stakeholder interests  </li> <li>Maintaining a clear and prioritized backlog  </li> <li>Staying available to the Development Team for clarifications  </li> <li>Avoiding micromanagement while providing necessary guidance  </li> </ul>","tags":["scrum","product owner","roles"]},{"location":"2.3-scrum-master-role/","title":"Scrum Master Role","text":"<p>The Scrum Master (SM) acts as a servant-leader and facilitator for the Scrum Team. Their primary goal is to ensure that Scrum is understood and enacted properly.</p>","tags":["scrum","scrum master","roles","facilitation"]},{"location":"2.3-scrum-master-role/#responsibilities","title":"Responsibilities","text":"<ul> <li> <p>Coaching the Team:   Helping the Scrum Team and organization understand Scrum theory, practices, rules, and values.  </p> </li> <li> <p>Removing Impediments:   Identifying and removing obstacles that prevent the team from achieving their Sprint goals.  </p> </li> <li> <p>Facilitating Scrum Events:   Ensuring that Scrum ceremonies such as Sprint Planning, Daily Scrum, Sprint Review, and Sprint Retrospective are productive and time-boxed.  </p> </li> <li> <p>Shielding the Team:   Protecting the Development Team from external distractions and interruptions.  </p> </li> <li> <p>Fostering Continuous Improvement:   Encouraging the team to inspect and adapt processes for increased effectiveness.</p> </li> </ul>","tags":["scrum","scrum master","roles","facilitation"]},{"location":"2.3-scrum-master-role/#key-skills-traits","title":"Key Skills &amp; Traits","text":"<ul> <li>Strong servant-leader mindset  </li> <li>Excellent communication and conflict resolution skills  </li> <li>Deep understanding of Agile and Scrum frameworks  </li> <li>Ability to influence without authority  </li> </ul>","tags":["scrum","scrum master","roles","facilitation"]},{"location":"2.3-scrum-master-role/#common-challenges","title":"Common Challenges","text":"<ul> <li>Balancing facilitation without micromanagement  </li> <li>Dealing with resistance to change within the team or organization  </li> <li>Ensuring the team remains focused and motivated  </li> <li>Navigating organizational impediments outside the team\u2019s control  </li> </ul>","tags":["scrum","scrum master","roles","facilitation"]},{"location":"2.4-development-team-role/","title":"Development Team Role","text":"<p>The Development Team consists of professionals who do the work of delivering a potentially releasable product Increment at the end of each Sprint.</p>","tags":["scrum","development team","roles","collaboration"]},{"location":"2.4-development-team-role/#responsibilities","title":"Responsibilities","text":"<ul> <li> <p>Delivering the Sprint Goal:   Working collaboratively to build the product increment that meets the Definition of Done.  </p> </li> <li> <p>Self-Organizing:   Planning and managing their own work without direction from outside the team.  </p> </li> <li> <p>Cross-Functional Skills:   Having all necessary skills within the team to deliver the product, including design, development, testing, and documentation.  </p> </li> <li> <p>Participating in Scrum Events:   Actively engaging in Sprint Planning, Daily Scrums, Sprint Reviews, and Retrospectives.</p> </li> </ul>","tags":["scrum","development team","roles","collaboration"]},{"location":"2.4-development-team-role/#key-characteristics","title":"Key Characteristics","text":"<ul> <li>Typically 3 to 9 members  </li> <li>No titles or sub-teams within the Development Team  </li> <li>Collective accountability for the product delivered  </li> <li>Collaborative and communicative  </li> </ul>","tags":["scrum","development team","roles","collaboration"]},{"location":"2.4-development-team-role/#common-challenges","title":"Common Challenges","text":"<ul> <li>Balancing workload within the team  </li> <li>Maintaining quality while meeting deadlines  </li> <li>Ensuring open communication and transparency  </li> <li>Adapting to changes in requirements and priorities  </li> </ul>","tags":["scrum","development team","roles","collaboration"]},{"location":"3.1-sprint-planning/","title":"Sprint Planning","text":"<p>Sprint Planning is the event that kicks off the Sprint. During this meeting, the Scrum Team collaboratively defines the work to be done in the upcoming Sprint.</p>","tags":["scrum","events","sprint planning"]},{"location":"3.1-sprint-planning/#purpose","title":"Purpose","text":"<ul> <li>Determine the Sprint Goal  </li> <li>Select Product Backlog items to include in the Sprint Backlog  </li> <li>Define a plan for delivering the selected work  </li> </ul>","tags":["scrum","events","sprint planning"]},{"location":"3.1-sprint-planning/#participants","title":"Participants","text":"<ul> <li>Product Owner  </li> <li>Scrum Master  </li> <li>Development Team  </li> </ul>","tags":["scrum","events","sprint planning"]},{"location":"3.1-sprint-planning/#process","title":"Process","text":"<ol> <li>The Product Owner presents the highest priority Product Backlog items.  </li> <li>The Development Team evaluates the items and forecasts what can be delivered.  </li> <li>The team collaboratively sets a Sprint Goal.  </li> <li>The Development Team breaks down the selected work into tasks or smaller units.  </li> </ol>","tags":["scrum","events","sprint planning"]},{"location":"3.1-sprint-planning/#timebox","title":"Timebox","text":"<ul> <li>Typically 2 hours per week of Sprint duration (e.g., 4 hours for a 2-week Sprint).</li> </ul>","tags":["scrum","events","sprint planning"]},{"location":"3.1-sprint-planning/#best-practices","title":"Best Practices","text":"<ul> <li>Ensure clear communication of priorities  </li> <li>Encourage team discussion and commitment  </li> <li>Keep the focus on achievable goals  </li> </ul>","tags":["scrum","events","sprint planning"]},{"location":"3.2-daily-scrum/","title":"Daily Scrum","text":"<p>The Daily Scrum is a short, time-boxed event held every day of the Sprint. It is designed to synchronize the team\u2019s activities and create a plan for the next 24 hours.</p>","tags":["scrum","events","daily scrum"]},{"location":"3.2-daily-scrum/#purpose","title":"Purpose","text":"<ul> <li>Inspect progress toward the Sprint Goal  </li> <li>Adapt the plan to optimize the work remaining  </li> </ul>","tags":["scrum","events","daily scrum"]},{"location":"3.2-daily-scrum/#participants","title":"Participants","text":"<ul> <li>Development Team (mandatory)  </li> <li>Scrum Master (optional, typically facilitates)  </li> <li>Product Owner (optional)</li> </ul>","tags":["scrum","events","daily scrum"]},{"location":"3.2-daily-scrum/#format","title":"Format","text":"<ul> <li>Usually a 15-minute stand-up meeting  </li> <li>Each team member typically answers three questions:  </li> <li>What did I do yesterday to help meet the Sprint Goal?  </li> <li>What will I do today to help meet the Sprint Goal?  </li> <li>Are there any impediments blocking my progress?</li> </ul>","tags":["scrum","events","daily scrum"]},{"location":"3.2-daily-scrum/#best-practices","title":"Best Practices","text":"<ul> <li>Keep it focused and brief  </li> <li>Hold it at the same time and place every day  </li> <li>Use it as a coordination tool, not a status report for management  </li> <li>Address issues outside the meeting  </li> </ul>","tags":["scrum","events","daily scrum"]},{"location":"3.3-sprint-review/","title":"Sprint Review","text":"<p>The Sprint Review is held at the end of the Sprint to inspect the Increment and adapt the Product Backlog if needed.</p>","tags":["scrum","events","sprint review"]},{"location":"3.3-sprint-review/#purpose","title":"Purpose","text":"<ul> <li>Demonstrate the work completed during the Sprint  </li> <li>Gather feedback from stakeholders  </li> <li>Collaborate on what to do next  </li> </ul>","tags":["scrum","events","sprint review"]},{"location":"3.3-sprint-review/#participants","title":"Participants","text":"<ul> <li>Scrum Team  </li> <li>Stakeholders  </li> <li>Product Owner (facilitator)  </li> </ul>","tags":["scrum","events","sprint review"]},{"location":"3.3-sprint-review/#process","title":"Process","text":"<ul> <li>The Development Team presents the completed Increment.  </li> <li>Stakeholders provide feedback, ask questions, and suggest changes.  </li> <li>The Product Owner discusses the Product Backlog and potential adjustments based on feedback.  </li> <li>Collaboration on next steps and priorities for upcoming Sprints.</li> </ul>","tags":["scrum","events","sprint review"]},{"location":"3.3-sprint-review/#timebox","title":"Timebox","text":"<ul> <li>Typically up to 1 hour per week of Sprint duration (e.g., 2 hours for a 2-week Sprint).</li> </ul>","tags":["scrum","events","sprint review"]},{"location":"3.3-sprint-review/#best-practices","title":"Best Practices","text":"<ul> <li>Encourage open and honest feedback  </li> <li>Focus on working product rather than documentation  </li> <li>Use feedback to refine the backlog and improve future planning  </li> </ul>","tags":["scrum","events","sprint review"]},{"location":"3.4-sprint-retrospective/","title":"Sprint Retrospective","text":"<p>The Sprint Retrospective is the final Scrum event in the Sprint cycle, focused on reflecting on the process and identifying improvements.</p>","tags":["scrum","events","retrospective"]},{"location":"3.4-sprint-retrospective/#purpose","title":"Purpose","text":"<ul> <li>Inspect how the last Sprint went regarding people, relationships, processes, and tools  </li> <li>Identify and order the major items that went well and potential improvements  </li> <li>Create a plan for implementing improvements in the next Sprint  </li> </ul>","tags":["scrum","events","retrospective"]},{"location":"3.4-sprint-retrospective/#participants","title":"Participants","text":"<ul> <li>Scrum Team (Product Owner, Scrum Master, Development Team)  </li> </ul>","tags":["scrum","events","retrospective"]},{"location":"3.4-sprint-retrospective/#process","title":"Process","text":"<ul> <li>Discuss what went well during the Sprint  </li> <li>Discuss what could be improved  </li> <li>Identify actionable steps to enhance team performance  </li> <li>Commit to changes to improve the next Sprint  </li> </ul>","tags":["scrum","events","retrospective"]},{"location":"3.4-sprint-retrospective/#timebox","title":"Timebox","text":"<ul> <li>Usually 1.5 hours per week of Sprint duration (e.g., 3 hours for a 2-week Sprint).</li> </ul>","tags":["scrum","events","retrospective"]},{"location":"3.4-sprint-retrospective/#best-practices","title":"Best Practices","text":"<ul> <li>Foster a safe, open environment for honest discussion  </li> <li>Encourage participation from all team members  </li> <li>Focus on process improvements, not blaming individuals  </li> <li>Track improvements over time to measure progress  </li> </ul>","tags":["scrum","events","retrospective"]},{"location":"4.1-product-backlog/","title":"Product Backlog","text":"<p>The Product Backlog is an ordered list of everything that might be needed in the product. It is the single source of requirements for any changes to be made.</p>","tags":["scrum","artifacts","product backlog"]},{"location":"4.1-product-backlog/#characteristics","title":"Characteristics","text":"<ul> <li>Dynamic and evolving based on changing requirements and feedback  </li> <li>Prioritized by the Product Owner to maximize value  </li> <li>Contains features, fixes, technical work, and knowledge acquisition  </li> </ul>","tags":["scrum","artifacts","product backlog"]},{"location":"4.1-product-backlog/#ownership","title":"Ownership","text":"<ul> <li>Owned and managed by the Product Owner  </li> <li>The Development Team collaborates to refine and estimate items  </li> </ul>","tags":["scrum","artifacts","product backlog"]},{"location":"4.1-product-backlog/#refinement","title":"Refinement","text":"<ul> <li>Ongoing process of adding detail, estimates, and order to backlog items  </li> <li>Helps ensure the backlog is ready for upcoming Sprints  </li> </ul>","tags":["scrum","artifacts","product backlog"]},{"location":"4.1-product-backlog/#importance","title":"Importance","text":"<ul> <li>Provides transparency and a clear roadmap for the Scrum Team and stakeholders  </li> <li>Enables adaptive planning and flexibility  </li> </ul>","tags":["scrum","artifacts","product backlog"]},{"location":"4.2-sprint-backlog/","title":"Sprint Backlog","text":"<p>The Sprint Backlog is the set of Product Backlog items selected for the Sprint, plus a plan for delivering the product Increment and achieving the Sprint Goal.</p>","tags":["scrum","artifacts","sprint backlog"]},{"location":"4.2-sprint-backlog/#characteristics","title":"Characteristics","text":"<ul> <li>Owned by the Development Team  </li> <li>Updated daily to reflect progress and changes  </li> <li>Includes detailed tasks and work breakdowns  </li> </ul>","tags":["scrum","artifacts","sprint backlog"]},{"location":"4.2-sprint-backlog/#purpose","title":"Purpose","text":"<ul> <li>Provides focus and clarity for the Sprint work  </li> <li>Helps the team track progress towards the Sprint Goal  </li> <li>Facilitates transparency and communication  </li> </ul>","tags":["scrum","artifacts","sprint backlog"]},{"location":"4.2-sprint-backlog/#management","title":"Management","text":"<ul> <li>The Development Team manages and adapts the Sprint Backlog throughout the Sprint  </li> <li>Tasks may be added, removed, or re-prioritized as needed  </li> </ul>","tags":["scrum","artifacts","sprint backlog"]},{"location":"4.2-sprint-backlog/#importance","title":"Importance","text":"<ul> <li>Keeps the team aligned and organized  </li> <li>Supports self-organization and accountability  </li> </ul>","tags":["scrum","artifacts","sprint backlog"]},{"location":"4.3-increment/","title":"Increment","text":"<p>An Increment is the sum of all the Product Backlog items completed during a Sprint combined with the value of the increments of all previous Sprints.</p>","tags":["scrum","artifacts","increment"]},{"location":"4.3-increment/#characteristics","title":"Characteristics","text":"<ul> <li>Must be in a usable condition regardless of whether the Product Owner decides to release it  </li> <li>Meets the Scrum Team\u2019s Definition of Done  </li> <li>Provides a visible step toward the product goal  </li> </ul>","tags":["scrum","artifacts","increment"]},{"location":"4.3-increment/#purpose","title":"Purpose","text":"<ul> <li>Delivers tangible value to stakeholders and customers  </li> <li>Enables frequent inspection and adaptation of the product  </li> <li>Supports continuous integration and delivery  </li> </ul>","tags":["scrum","artifacts","increment"]},{"location":"4.3-increment/#definition-of-done-dod","title":"Definition of Done (DoD)","text":"<ul> <li>A shared understanding of what it means for work to be complete  </li> <li>Ensures quality and completeness of each Increment  </li> <li>Can include coding, testing, documentation, and deployment criteria  </li> </ul>","tags":["scrum","artifacts","increment"]},{"location":"4.3-increment/#importance","title":"Importance","text":"<ul> <li>Ensures transparency about progress and quality  </li> <li>Builds confidence in the product\u2019s readiness for release  </li> </ul>","tags":["scrum","artifacts","increment"]},{"location":"5.1-agile-manifesto-overview/","title":"Agile Manifesto Overview","text":"<p>The Agile Manifesto, created in 2001 by a group of software development pioneers, lays the foundation for Agile methodologies by emphasizing collaboration, flexibility, and customer focus.</p>","tags":["agile","manifesto","principles","values"]},{"location":"5.1-agile-manifesto-overview/#core-purpose","title":"Core Purpose","text":"<ul> <li>To improve software development processes  </li> <li>To prioritize individuals and interactions over processes and tools  </li> <li>To deliver working software frequently  </li> </ul>","tags":["agile","manifesto","principles","values"]},{"location":"5.1-agile-manifesto-overview/#context","title":"Context","text":"<ul> <li>Response to heavyweight, document-driven traditional methodologies  </li> <li>Promotes adaptive planning and evolutionary development  </li> <li>Focuses on continuous delivery of valuable software  </li> </ul>","tags":["agile","manifesto","principles","values"]},{"location":"5.1-agile-manifesto-overview/#impact","title":"Impact","text":"<ul> <li>Inspired Agile frameworks like Scrum, Kanban, and XP  </li> <li>Influenced project management and organizational culture  </li> </ul>","tags":["agile","manifesto","principles","values"]},{"location":"5.2-the-4-agile-values/","title":"The 4 Agile Values","text":"<p>The Agile Manifesto is built upon four key values that prioritize collaboration, responsiveness, and customer focus.</p>","tags":["agile","values","manifesto"]},{"location":"5.2-the-4-agile-values/#1-individuals-and-interactions-over-processes-and-tools","title":"1. Individuals and Interactions over Processes and Tools","text":"<ul> <li>Emphasizes the importance of people and communication  </li> <li>Tools and processes support but do not replace human collaboration  </li> </ul>","tags":["agile","values","manifesto"]},{"location":"5.2-the-4-agile-values/#2-working-software-over-comprehensive-documentation","title":"2. Working Software over Comprehensive Documentation","text":"<ul> <li>Focuses on delivering functional software  </li> <li>Documentation should be just enough to support development and use  </li> </ul>","tags":["agile","values","manifesto"]},{"location":"5.2-the-4-agile-values/#3-customer-collaboration-over-contract-negotiation","title":"3. Customer Collaboration over Contract Negotiation","text":"<ul> <li>Encourages continuous engagement with customers  </li> <li>Adapts requirements based on feedback rather than rigid contracts  </li> </ul>","tags":["agile","values","manifesto"]},{"location":"5.2-the-4-agile-values/#4-responding-to-change-over-following-a-plan","title":"4. Responding to Change over Following a Plan","text":"<ul> <li>Values flexibility and adaptability  </li> <li>Plans guide but do not constrain progress  </li> </ul>","tags":["agile","values","manifesto"]},{"location":"5.2-the-4-agile-values/#summary","title":"Summary","text":"<p>While there is value in the items on the right, Agile prioritizes the items on the left for better outcomes.</p>","tags":["agile","values","manifesto"]},{"location":"5.3-the-12-agile-principles/","title":"The 12 Agile Principles","text":"<p>The Agile Manifesto includes 12 guiding principles that support Agile values and practices.</p> <ol> <li>Customer satisfaction through early and continuous delivery of valuable software. </li> <li>Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage. </li> <li>Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale. </li> <li>Business people and developers must work together daily throughout the project. </li> <li>Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done. </li> <li>The most efficient and effective method of conveying information is face-to-face conversation. </li> <li>Working software is the primary measure of progress. </li> <li>Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely. </li> <li>Continuous attention to technical excellence and good design enhances agility. </li> <li>Simplicity\u2014the art of maximizing the amount of work not done\u2014is essential. </li> <li>The best architectures, requirements, and designs emerge from self-organizing teams. </li> <li>At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly. </li> </ol> <p>These principles guide teams in adopting Agile mindsets and practices for successful delivery.</p>","tags":["agile","principles","manifesto"]},{"location":"6.1-user-stories/","title":"User Stories","text":"<p>User Stories are short, simple descriptions of a feature told from the perspective of the end user.</p>","tags":["agile","practices","user stories","requirements"]},{"location":"6.1-user-stories/#purpose","title":"Purpose","text":"<ul> <li>Capture requirements in a user-centric way  </li> <li>Facilitate collaboration between stakeholders and the team  </li> <li>Provide a basis for estimation and planning  </li> </ul>","tags":["agile","practices","user stories","requirements"]},{"location":"6.1-user-stories/#format","title":"Format","text":"<p>A common template is: As a [type of user], I want [some goal] so that [some reason].</p> <p>Example: As a registered user, I want to reset my password so that I can regain access to my account.</p>","tags":["agile","practices","user stories","requirements"]},{"location":"6.1-user-stories/#characteristics","title":"Characteristics","text":"<ul> <li>Focus on value to the user  </li> <li>Small and testable  </li> <li>Negotiable and flexible  </li> </ul>","tags":["agile","practices","user stories","requirements"]},{"location":"6.1-user-stories/#benefits","title":"Benefits","text":"<ul> <li>Encourages conversation around requirements  </li> <li>Helps break down complex features  </li> <li>Supports iterative development  </li> </ul>","tags":["agile","practices","user stories","requirements"]},{"location":"6.2-estimation-story-points/","title":"Estimation &amp; Story Points","text":"<p>Estimation in Agile helps teams forecast effort or complexity for backlog items, often using Story Points as a relative measure.</p>","tags":["agile","practices","estimation","story points"]},{"location":"6.2-estimation-story-points/#what-are-story-points","title":"What are Story Points?","text":"<ul> <li>A unitless measure representing effort, complexity, and risk  </li> <li>Relative rather than absolute, allowing teams to compare tasks  </li> </ul>","tags":["agile","practices","estimation","story points"]},{"location":"6.2-estimation-story-points/#why-use-story-points","title":"Why Use Story Points?","text":"<ul> <li>Avoids the pitfalls of time-based estimates  </li> <li>Encourages team discussion and consensus  </li> <li>Helps measure velocity and plan future Sprints  </li> </ul>","tags":["agile","practices","estimation","story points"]},{"location":"6.2-estimation-story-points/#common-techniques","title":"Common Techniques","text":"<ul> <li>Planning Poker: Team members assign story points simultaneously and discuss discrepancies  </li> <li>T-shirt Sizing: Categorize tasks as XS, S, M, L, XL to simplify estimation  </li> </ul>","tags":["agile","practices","estimation","story points"]},{"location":"6.2-estimation-story-points/#best-practices","title":"Best Practices","text":"<ul> <li>Keep estimates relative within the team context  </li> <li>Re-estimate when more information becomes available  </li> <li>Use velocity (average story points completed per Sprint) to improve forecasting  </li> </ul>","tags":["agile","practices","estimation","story points"]},{"location":"6.3-velocity/","title":"Velocity","text":"<p>Velocity is a metric that measures the amount of work a team completes during a Sprint, usually expressed in Story Points.</p>","tags":["agile","practices","velocity"]},{"location":"6.3-velocity/#purpose","title":"Purpose","text":"<ul> <li>Helps teams understand their capacity  </li> <li>Provides a basis for Sprint planning and forecasting  </li> <li>Tracks team productivity over time  </li> </ul>","tags":["agile","practices","velocity"]},{"location":"6.3-velocity/#calculation","title":"Calculation","text":"<ul> <li>Sum of the Story Points for all completed backlog items in a Sprint  </li> <li>Only fully completed items count toward velocity  </li> </ul>","tags":["agile","practices","velocity"]},{"location":"6.3-velocity/#usage","title":"Usage","text":"<ul> <li>Use velocity as a guide, not a target  </li> <li>Compare velocity trends over multiple Sprints to identify patterns  </li> <li>Adjust planning based on velocity changes  </li> </ul>","tags":["agile","practices","velocity"]},{"location":"6.3-velocity/#best-practices","title":"Best Practices","text":"<ul> <li>Avoid using velocity for individual performance evaluation  </li> <li>Don\u2019t inflate story points to increase velocity  </li> <li>Focus on delivering value, not just increasing velocity  </li> </ul>","tags":["agile","practices","velocity"]},{"location":"6.4-definition-of-done/","title":"Definition of Done","text":"<p>The Definition of Done (DoD) is a shared understanding within the Scrum Team of what it means for work to be complete.</p>","tags":["agile","practices","definition of done","DoD"]},{"location":"6.4-definition-of-done/#purpose","title":"Purpose","text":"<ul> <li>Ensures transparency and quality  </li> <li>Provides a checklist to confirm completeness  </li> <li>Helps avoid incomplete or partially done work  </li> </ul>","tags":["agile","practices","definition of done","DoD"]},{"location":"6.4-definition-of-done/#typical-criteria","title":"Typical Criteria","text":"<ul> <li>Code written and reviewed  </li> <li>Unit tests passed  </li> <li>Integrated into the main branch  </li> <li>Documentation updated  </li> <li>Tested and accepted by Product Owner  </li> </ul>","tags":["agile","practices","definition of done","DoD"]},{"location":"6.4-definition-of-done/#importance","title":"Importance","text":"<ul> <li>Maintains a consistent level of quality  </li> <li>Enables reliable product increments  </li> <li>Facilitates inspection and adaptation  </li> </ul>","tags":["agile","practices","definition of done","DoD"]},{"location":"6.4-definition-of-done/#customization","title":"Customization","text":"<ul> <li>Tailored to the team and project needs  </li> <li>Can evolve over time as maturity increases  </li> </ul>","tags":["agile","practices","definition of done","DoD"]},{"location":"6.5-continuous-integration-delivery/","title":"Continuous Integration &amp; Delivery (CI/CD)","text":"<p>CI/CD are practices that enable teams to frequently integrate code changes and deliver software quickly and reliably.</p>","tags":["agile","practices","ci/cd","continuous integration","continuous delivery"]},{"location":"6.5-continuous-integration-delivery/#continuous-integration-ci","title":"Continuous Integration (CI)","text":"<ul> <li>Developers merge code changes into a shared repository multiple times a day  </li> <li>Automated builds and tests run on every commit to detect issues early  </li> <li>Reduces integration problems and improves software quality  </li> </ul>","tags":["agile","practices","ci/cd","continuous integration","continuous delivery"]},{"location":"6.5-continuous-integration-delivery/#continuous-delivery-cd","title":"Continuous Delivery (CD)","text":"<ul> <li>Extends CI by automatically deploying code to staging or production environments  </li> <li>Enables fast, reliable, and repeatable releases  </li> <li>Supports rapid feedback and iteration  </li> </ul>","tags":["agile","practices","ci/cd","continuous integration","continuous delivery"]},{"location":"6.5-continuous-integration-delivery/#benefits","title":"Benefits","text":"<ul> <li>Faster delivery of value to customers  </li> <li>Reduced risk of integration failures  </li> <li>Improved collaboration and transparency  </li> </ul>","tags":["agile","practices","ci/cd","continuous integration","continuous delivery"]},{"location":"6.5-continuous-integration-delivery/#tools-practices","title":"Tools &amp; Practices","text":"<ul> <li>Automated testing frameworks  </li> <li>Build servers (e.g., Jenkins, GitHub Actions, GitLab CI)  </li> <li>Deployment automation  </li> <li>Monitoring and rollback mechanisms  </li> </ul>","tags":["agile","practices","ci/cd","continuous integration","continuous delivery"]},{"location":"7.1-burndown-chart/","title":"Burndown Chart","text":"<p>A Burndown Chart is a visual tool that shows the amount of work remaining versus time in a Sprint or project.</p>","tags":["agile","metrics","burndown chart","reporting"]},{"location":"7.1-burndown-chart/#purpose","title":"Purpose","text":"<ul> <li>Track progress toward completing work  </li> <li>Provide visibility into whether the team is on schedule  </li> </ul>","tags":["agile","metrics","burndown chart","reporting"]},{"location":"7.1-burndown-chart/#components","title":"Components","text":"<ul> <li>X-axis: Time (days in Sprint or project)  </li> <li>Y-axis: Work remaining (story points, tasks, or hours)  </li> <li>Ideal trend line: Expected progress to finish on time  </li> <li>Actual progress line: Real progress made  </li> </ul>","tags":["agile","metrics","burndown chart","reporting"]},{"location":"7.1-burndown-chart/#benefits","title":"Benefits","text":"<ul> <li>Easy to understand and communicate status  </li> <li>Early identification of risks or delays  </li> <li>Supports Daily Scrum discussions  </li> </ul>","tags":["agile","metrics","burndown chart","reporting"]},{"location":"7.1-burndown-chart/#limitations","title":"Limitations","text":"<ul> <li>Does not show scope changes explicitly  </li> <li>May not reveal quality issues or blocked work  </li> </ul>","tags":["agile","metrics","burndown chart","reporting"]},{"location":"7.2-burnup-chart/","title":"Burnup Chart","text":"<p>A Burnup Chart displays work completed over time, helping track progress toward the project or release scope.</p>","tags":["agile","metrics","burnup chart","reporting"]},{"location":"7.2-burnup-chart/#purpose","title":"Purpose","text":"<ul> <li>Show how much work has been completed and how much remains  </li> <li>Visualize scope changes alongside progress  </li> </ul>","tags":["agile","metrics","burnup chart","reporting"]},{"location":"7.2-burnup-chart/#components","title":"Components","text":"<ul> <li>X-axis: Time (days in Sprint or project)  </li> <li>Y-axis: Work (story points, tasks, or hours)  </li> <li>Scope line: Total amount of work (can change with scope adjustments)  </li> <li>Completed work line: Work done so far  </li> </ul>","tags":["agile","metrics","burnup chart","reporting"]},{"location":"7.2-burnup-chart/#benefits","title":"Benefits","text":"<ul> <li>Clearly shows scope changes and their impact  </li> <li>Helps teams and stakeholders understand progress and forecast completion  </li> <li>Encourages adaptive planning  </li> </ul>","tags":["agile","metrics","burnup chart","reporting"]},{"location":"7.2-burnup-chart/#limitations","title":"Limitations","text":"<ul> <li>Slightly more complex than Burndown charts  </li> <li>Requires accurate scope tracking  </li> </ul>","tags":["agile","metrics","burnup chart","reporting"]},{"location":"7.3-cumulative-flow-diagram/","title":"Cumulative Flow Diagram (CFD)","text":"<p>A Cumulative Flow Diagram visualizes the flow of work across different stages of a process over time.</p>","tags":["agile","metrics","cumulative flow diagram","CFD","reporting"]},{"location":"7.3-cumulative-flow-diagram/#purpose","title":"Purpose","text":"<ul> <li>Track the status of work items in various workflow states  </li> <li>Identify bottlenecks and process inefficiencies  </li> <li>Help teams manage flow and improve predictability  </li> </ul>","tags":["agile","metrics","cumulative flow diagram","CFD","reporting"]},{"location":"7.3-cumulative-flow-diagram/#components","title":"Components","text":"<ul> <li>X-axis: Time  </li> <li>Y-axis: Number of work items  </li> <li>Colored bands representing work in different states (e.g., To Do, In Progress, Done)  </li> </ul>","tags":["agile","metrics","cumulative flow diagram","CFD","reporting"]},{"location":"7.3-cumulative-flow-diagram/#interpretation","title":"Interpretation","text":"<ul> <li>Width of each band shows the number of tasks in that state  </li> <li>Stable and smooth flow is indicated by consistent band widths  </li> <li>Increasing width in a band suggests a bottleneck  </li> </ul>","tags":["agile","metrics","cumulative flow diagram","CFD","reporting"]},{"location":"7.3-cumulative-flow-diagram/#benefits","title":"Benefits","text":"<ul> <li>Provides insight into workflow efficiency  </li> <li>Helps optimize cycle time and throughput  </li> <li>Supports data-driven process improvements  </li> </ul>","tags":["agile","metrics","cumulative flow diagram","CFD","reporting"]},{"location":"7.3-cumulative-flow-diagram/#limitations","title":"Limitations","text":"<ul> <li>Requires consistent workflow state definitions  </li> <li>May be complex for beginners to interpret  </li> </ul>","tags":["agile","metrics","cumulative flow diagram","CFD","reporting"]},{"location":"7.4-lead-time-cycle-time/","title":"Lead Time &amp; Cycle Time","text":"<p>Lead Time and Cycle Time are key metrics that measure the time taken for work items to progress through the workflow.</p>","tags":["agile","metrics","lead time","cycle time","reporting"]},{"location":"7.4-lead-time-cycle-time/#lead-time","title":"Lead Time","text":"<ul> <li>The total time from when a request is made (e.g., user story created) until it is completed  </li> <li>Measures overall responsiveness of the team  </li> </ul>","tags":["agile","metrics","lead time","cycle time","reporting"]},{"location":"7.4-lead-time-cycle-time/#cycle-time","title":"Cycle Time","text":"<ul> <li>The time from when work actually starts on an item until it is completed  </li> <li>Measures efficiency during active work  </li> </ul>","tags":["agile","metrics","lead time","cycle time","reporting"]},{"location":"7.4-lead-time-cycle-time/#why-they-matter","title":"Why They Matter","text":"<ul> <li>Help teams identify delays and bottlenecks  </li> <li>Support forecasting and process improvement  </li> <li>Provide insight into customer wait times and delivery speed  </li> </ul>","tags":["agile","metrics","lead time","cycle time","reporting"]},{"location":"7.4-lead-time-cycle-time/#how-to-measure","title":"How to Measure","text":"<ul> <li>Track timestamps for work item states in the workflow  </li> <li>Calculate averages over a period (e.g., Sprint or month)  </li> </ul>","tags":["agile","metrics","lead time","cycle time","reporting"]},{"location":"7.5-retrospective-metrics/","title":"Retrospective Metrics","text":"<p>Retrospective Metrics help teams reflect on their performance and identify areas for improvement during Sprint Retrospectives.</p>","tags":["agile","metrics","retrospective","continuous improvement"]},{"location":"7.5-retrospective-metrics/#common-metrics","title":"Common Metrics","text":"<ul> <li>Sprint Goal Completion: Percentage of Sprint goals achieved  </li> <li>Team Satisfaction: Survey scores or qualitative feedback on team morale  </li> <li>Blocked Issues: Number and duration of blocked work items  </li> <li>Defects Raised vs. Fixed: Quality indicators  </li> </ul>","tags":["agile","metrics","retrospective","continuous improvement"]},{"location":"7.5-retrospective-metrics/#purpose","title":"Purpose","text":"<ul> <li>Encourage transparency and openness  </li> <li>Identify patterns and recurring issues  </li> <li>Track improvements over time  </li> </ul>","tags":["agile","metrics","retrospective","continuous improvement"]},{"location":"7.5-retrospective-metrics/#tips-for-using-metrics","title":"Tips for Using Metrics","text":"<ul> <li>Focus on metrics that drive positive change  </li> <li>Avoid using metrics to blame or punish  </li> <li>Combine quantitative data with qualitative insights  </li> </ul>","tags":["agile","metrics","retrospective","continuous improvement"]}]}